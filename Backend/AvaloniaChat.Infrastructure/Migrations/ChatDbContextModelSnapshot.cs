// <auto-generated />
using System;
using AvaloniaChat.Data;
using AvaloniaChat.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AvaloniaChat.Infrastructure.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AvaloniaChat.Domain.Models.Group", b =>
                {
                    b.Property<Guid>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("GroupImage")
                        .HasColumnType("bytea");

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserAdmin");

                    b.HasKey("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            GroupId = new Guid("f66475d3-7ea1-422c-b658-353a96732d14"),
                            GroupTitle = "Group 1",
                            UserId = 1
                        },
                        new
                        {
                            GroupId = new Guid("0c25b85c-e6cd-4030-90be-090dcc653ddc"),
                            GroupTitle = "Group 2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("SendDate");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("MessageId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<long?>("ExpiresIn")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("bytea");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PasswordHash = "$2a$11$ItpF9E/CZC2Lb1WSBd46QeXpeUuZqeyckw7baie0dX9gjlza6CI9.",
                            Username = "test1"
                        },
                        new
                        {
                            UserId = 2,
                            PasswordHash = "$2a$11$nJ1VFBMHFEl9mRd/Uhb7gukx18UxjHpA1gQF3Vmh.mr1w2dUHzYqy",
                            Username = "test2"
                        },
                        new
                        {
                            UserId = 3,
                            PasswordHash = "$2a$11$bCaBT8I3hZI5uUhnOESD2.DiSIjQuTwBlwFb0WmwuvSXMseIevNIa",
                            Username = "test3"
                        });
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.UserGroup", b =>
                {
                    b.Property<int>("UserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserGroupId"));

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("UserGroupId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            UserGroupId = 1,
                            GroupId = new Guid("0c25b85c-e6cd-4030-90be-090dcc653ddc"),
                            UserId = 1
                        },
                        new
                        {
                            UserGroupId = 2,
                            GroupId = new Guid("0c25b85c-e6cd-4030-90be-090dcc653ddc"),
                            UserId = 2
                        },
                        new
                        {
                            UserGroupId = 3,
                            GroupId = new Guid("0c25b85c-e6cd-4030-90be-090dcc653ddc"),
                            UserId = 3
                        },
                        new
                        {
                            UserGroupId = 4,
                            GroupId = new Guid("f66475d3-7ea1-422c-b658-353a96732d14"),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.Group", b =>
                {
                    b.HasOne("AvaloniaChat.Domain.Models.User", "User")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.Message", b =>
                {
                    b.HasOne("AvaloniaChat.Domain.Models.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvaloniaChat.Domain.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.UserGroup", b =>
                {
                    b.HasOne("AvaloniaChat.Domain.Models.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvaloniaChat.Domain.Models.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.Group", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("AvaloniaChat.Domain.Models.User", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Messages");

                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
